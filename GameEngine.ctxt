#BlueJ class context
comment0.target=GameEngine
comment0.text=\r\n\ \r\n\ \ This\ class\ creates\ all\ rooms,\ creates\ the\ parser\ and\ starts\r\n\ \ the\ game.\ \ It\ also\ evaluates\ and\ executes\ the\ commands\ that\ \r\n\ \ the\ parser\ returns.\r\n\ \r\n\ @author\ \ Pham\ Jimmy\r\n\ @version\ 7.26\r\n
comment1.params=
comment1.target=GameEngine()
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ GameEngine\r\n
comment10.params=pCommand
comment10.target=void\ goRoom(Command)
comment10.text=\ \r\n\ Try\ to\ go\ to\ one\ direction.\ If\ there\ is\ an\ exit,\ enter\ the\ new\r\n\ room,\ otherwise\ print\ an\ error\ message.\r\n\ @param\ pCommand\ correspond\ au\ 2e\ mot\ entr\u00E9\ par\ l'utilisateur\ apr\u00E8s\ un\ "go"\r\n
comment11.params=pCommand
comment11.target=void\ back(Command)
comment11.text=\r\n\ proc\u00E9dure\ qui\ permet\ de\ revenir\ dans\ la\ pi\u00E8ce\ pr\u00E9c\u00E9dente\r\n\ @param\ pCommand\ correspond\ \u00E0\ la\ commande\ entr\u00E9e\ par\ l'utilisateur\r\n
comment12.params=pCommand
comment12.target=void\ test(Command)
comment12.text=\r\n\ proc\u00E9dure\ qui\ teste\ une\ succession\ de\ commandes\ enregistr\u00E9es\ dans\ un\ fichier.\r\n\ @param\ pCommand\ correspond\ \u00E0\ la\ commande\ entr\u00E9e\ par\ l'utilisateur\r\n
comment13.params=pCommand
comment13.target=void\ take(Command)
comment13.text=\r\n\ proc\u00E9dure\ qui\ permet\ de\ r\u00E9cup\u00E9rer\ l'item\ \r\n\ @param\ pCommand\ la\ commande\ entr\u00E9e\ par\ l'utilisateur\r\n
comment14.params=pCommand
comment14.target=void\ drop(Command)
comment14.text=\r\n\ proc\u00E9dure\ qui\ permet\ de\ poser\ l'item\ \r\n\ @param\ pCommand\ la\ commande\ entr\u00E9e\ par\ l'utilisateur\r\n
comment15.params=pCommand
comment15.target=void\ inventory(Command)
comment15.text=\r\n\ affiche\ l'inventaire\ du\ joueur\r\n\ @param\ pCommand\ la\ commande\ entr\u00E9e\ par\ l'utilisateur\r\n
comment16.params=
comment16.target=void\ endGame()
comment16.text=\r\n\ proc\u00E9dure\ qui\ permet\ de\ terminer\ la\ partie\r\n
comment17.params=
comment17.target=void\ timerEnd()
comment17.text=\r\n\ d\u00E9termine\ si\ le\ joueur\ n'a\ plus\ de\ tours\ restant\ \u00E0\ jouer\r\n
comment18.params=
comment18.target=void\ oxyMoves()
comment18.text=\r\n\ v\u00E9rifie\ si\ le\ joueur\ est\ retourn\u00E9\ au\ vaisseau,\ si\ oui\ le\ temps\ est\ r\u00E9initialis\u00E9\ \u00E0\ 15\ moves\r\n
comment19.params=pCommand
comment19.target=void\ charge(Command)
comment19.text=\r\n\ permet\ au\ joueur\ de\ charger\ son\ Beamer\ cens\u00E9\ \u00EAtre\ dans\ son\ inventaire\r\n\ @param\ pCommand\ la\ commande\ entr\u00E9e\ par\ le\ joueur\r\n
comment2.params=pUserInterface
comment2.target=void\ setGUI(UserInterface)
comment2.text=\r\n\ proc\u00E9dure\ qui\ affiche\ l'image\ et\ lea\ description\ de\ la\ pi\u00E8ce\r\n\ @param\ pUserInterface\ initialise\ et\ ouvre\ l'interface\r\n
comment20.params=pCommand
comment20.target=void\ fire(Command)
comment20.text=\r\n\ permet\ au\ joueur\ de\ se\ t\u00E9l\u00E9porter\ \u00E0\ la\ room\ charg\u00E9e\ dans\ son\ Beamer,\r\n\ cens\u00E9\ \u00EAtre\ plac\u00E9\ dans\ son\ inventaire\r\n\ @param\ pCommand\ la\ commande\ entr\u00E9e\ par\ le\ joueur\r\n
comment21.params=
comment21.target=void\ winSituation()
comment21.text=\r\n\ Termine\ le\ jeu\ dans\ le\ cas\ o\u00F9\ les\ 2\ moteurs\ et\ le\ livre\ d'incantation\ sont\ pos\u00E9s\ dans\ le\ vaisseau.\r\n\ Renvoie\ un\ message\ de\ victoire\ dans\ ce\ cas,\ et\ renvoie\ un\ message\ rappelant\ la\ mission\ du\ jeu\ sinon.\r\n
comment22.params=
comment22.target=void\ printWin()
comment22.text=\r\n\ affiche\ le\ message\ de\ victoire\ et\ termine\ le\ jeu\r\n
comment23.params=
comment23.target=void\ printMiss()
comment23.text=\r\n\ affiche\ le\ message\ qui\ rappelle\ les\ missions\ du\ jeu\r\n
comment3.params=
comment3.target=void\ printWelcome()
comment3.text=\r\n\ Print\ out\ the\ opening\ message\ for\ the\ player.\r\n
comment4.params=
comment4.target=void\ printLocationInfo()
comment4.text=\r\n\ Affiche\ la\ description\ et\ l'image\ de\ la\ room\r\n
comment5.params=
comment5.target=void\ look()
comment5.text=\r\n\ proc\u00E9dure\ qui\ affiche\ la\ description\ de\ la\ pi\u00E8ce\ ou\ d'un\ item\ si\ l'on\ \r\n\ renseigne\ un\ 2e\ mot\r\n
comment6.params=pCommand
comment6.target=void\ eat(Command)
comment6.text=\r\n\ proc\u00E9dure\ qui\ permet\ au\ joueur\ de\ manger\r\n\ @param\ pCommand\ la\ commande\ entr\u00E9e\ par\ l'utilisateur\r\n
comment7.params=
comment7.target=void\ createRooms()
comment7.text=\r\n\ Cr\u00E9e\ les\ rooms\ du\ jeu,\ d\u00E9signe\ chacune\ de\ leurs\ sorties\ et\ leurs\ assignent\r\n\ les\ items.\ Initialise\ \u00E9galement\ la\ pi\u00E8ce\ de\ d\u00E9part\ et\ "la\ pi\u00E8ce\ \ d'avant".\r\n\ \r\n
comment8.params=pCommandLine
comment8.target=void\ interpretCommand(java.lang.String)
comment8.text=\r\n\ Given\ a\ command,\ process\ (that\ is\:\ execute)\ the\ command.\r\n\ If\ this\ command\ ends\ the\ game,\ true\ is\ returned,\ otherwise\ false\ is\r\n\ returned.\r\n\ @param\ pCommandLine\ correspond\ \u00E0\ la\ commande\ entr\u00E9e\ par\ l'utilisateur\r\n
comment9.params=
comment9.target=void\ printHelp()
comment9.text=\r\n\ Print\ out\ some\ help\ information.\r\n
numComments=24
